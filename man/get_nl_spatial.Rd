% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_nl_spatial.R
\name{get_nl_spatial}
\alias{get_nl_spatial}
\title{Calculate spatial data from metrics.turtles and metrics.patches output}
\usage{
get_nl_spatial(nl, turtles = TRUE, patches = TRUE,
  turtle_coords = "px", format = "spatial")
}
\arguments{
\item{nl}{nl object}

\item{turtles}{if TRUE, the function generates spatial point objects (sf) from metrics.turtles data}

\item{patches}{if TRUE, the function generates raster objects from metrics.patches data}

\item{turtle_coords}{either "px" if turtle coordinates were measured as "pxcor" and "pycor" or "x" if coordinates were measured as "xcor" and "ycor"}

\item{format}{string indication wether to return spatial objects (RasterLayer, sf Points) or a rowbinded tibble}
}
\value{
tibble with spatial data objects
}
\description{
Execute NetLogo simulation from a nl object with a defined experiment and simdesign
}
\details{
get_nl_spatial generates spatial point objects and raster objects from tdata that has been collected by metrics.turtles and metrics.patches.
metrics.turtles and metrics.patches need to collect coordinates of turtles and patches.
For patches this can be easily done by adding "pxcor" and "pycor" to metrics.patches.
For turtles you can either add "pxcor" and "pycor" to metrics.turtles or "xcor" and "ycor".
It is also possible to measure both coordinates, and select the type that is used for spatial object creation through the function parameter turtle_coords.
"px" uses "pxcor" and "pycor", while "x" uses "xcor" and "ycor".
}
\examples{
\dontrun{

# Run parallel on local machine:
future::plan(multisession)
# Run simulations:
results \%<-\% run_nl_all(nl = nl, cleanup = "all")
# Attach results to nl:
setsim(nl, "simoutput") <- results
# Get spatial data:
results_spatial <- get_nl_spatial(nl)

}
}
